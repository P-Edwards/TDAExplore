% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeline_functions.R
\name{TDAExplore}
\alias{TDAExplore}
\title{Train and cross-validate a linear SVM classifier from image landscapes}
\usage{
TDAExplore(
  parameters = FALSE,
  number_of_cores = 2,
  experiment_name = FALSE,
  image_directories = FALSE,
  patch_center_image_directories = FALSE,
  directory_classes = FALSE,
  data_results_directory = FALSE,
  radius_of_patches = FALSE,
  patch_ratio = 2,
  svm = FALSE,
  multisvm = FALSE,
  randforest = FALSE,
  number_of_folds = 5,
  pca = FALSE,
  verbose = FALSE,
  proportion = 0.025,
  benchmark = FALSE,
  lower = 0,
  upper = 1
)
}
\arguments{
\item{parameters}{File path to csv file designating which folders to analyze. A template parameters.csv is included at https://github.com/P-Edwards/TDAExplore-ML.
You can alternatively provide parameters via this function's arguments directly. If you provide both a parameters file and function arguments, the function
arguments will overwrite the arguments from the csv file.}

\item{number_of_cores}{The number of CPU cores for parallelization. Parallelization is over images, so allocating more cores than images provides no benefit.}

\item{experiment_name}{Prefix that will have additional information appended to form an informative file name for saving. Default is nothing.}

\item{image_directories}{Character vector of paths to directories holding image files to process.}

\item{patch_center_image_directories}{Character vector of the same length as image_directories with paths to directories holding image files. The files in
patch_center_image_directories\link{i} will be matched, in alphabetical order, to the files in image_directories\link{i}, and used for selecting the centers of patches.
This is useful when e.g. patch_center_image_directories\link{i} contains masks for parts of the images in image_directories\link{i} to focus on. patch_center_image_directories\link{i}
may also be set to FALSE instead of a path, in which case no masked images will be used for center selection with image_directories\link{i}.}

\item{directory_classes}{Character vector of same length as image directories. directory_classes\link{i} specifies the class of the images in image_directories\link{i}.}

\item{data_results_directory}{File path (relative to current working directory) where data results can be saved. This function will only produce a file path
for saving, the user must save the results themselves if desired. ./tda_explores_results is the default.}

\item{radius_of_patches}{Pixel radius of patches. Default is 50 pixels.}

\item{patch_ratio}{The number of patches sampled per image will be patch_ratio*(PIXEL AREA OF IMAGE)/(PIXEL AREA OF SINGLE PATCH). Default is 2.}

\item{svm}{If set to TRUE, trains and tests SVM. If set to FALSE, only computes landscapes for each image. Default is FALSE.}

\item{multisvm}{If set to TRUE, trains and tests multi-class SVM. If set to FALSE, only computes landscapes for each image.}

\item{randforest}{If set to TRUE, trains and tests random forest model. Supports multiclass. Could take prohitively long if --pca is not TRUE. Default is FALSE.}

\item{number_of_folds}{The number of folds to use in SVM cross-validation. The default is 5.}

\item{pca}{If set to TRUE, transforms landscapes after computation by projecting onto first 50 PC's, then scaling. Default is FALSE.}

\item{verbose}{If set to TRUE, outputs some progress information using print. Default is FALSE.}

\item{benchmark}{If set to TRUE, uses a fork cluster type which is more easily trackable by benchmarking software. Does nothing on Windows. Default is FALSE.}

\item{lower}{Experimental, leave default.}

\item{upper}{Experimental, leave default.}
}
\value{
Returns a list, ml_results, whose entries contain the computation results.
\itemize{
\item{\strong{ml_results$data_results_directory}}{ See arguments, stored for convenience.}
\item{\strong{ml_results$data_name_stem}}{ See arguments, stored for convenience}
\item{\strong{ml_results$summaries}}{ Matrix of computed landscapes for patches.}
\item{\strong{ml_results$patch_types}}{ Vector designating which class of image each landscape (row in the summaries matrix) comes from}
\item{\strong{ml_results$svm}}{ List containing results from each of the 5 folds of SVM training-testing computation}
}
}
\description{
Train and cross-validate a linear SVM classifier from image landscapes
}
\examples{
computation_results <- TDAExplore("parameters.csv",number_of_cores=5,verbose=TRUE)
}
